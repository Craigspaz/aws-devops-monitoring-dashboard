// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test for primary devopsDashboardStack 1`] = `
Object {
  "Conditions": Object {
    "AnonymousDataToAWS": Object {
      "Fn::Equals": Array [
        Object {
          "Fn::FindInMap": Array [
            "AnonymousData",
            "SendAnonymousUsageData",
            "Data",
          ],
        },
        "Yes",
      ],
    },
    "GitHubCondition": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "UseGitHub",
        },
        "Yes",
      ],
    },
    "QuickSightCondition": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "QuickSightPrincipalArn",
            },
            "",
          ],
        },
      ],
    },
    "WebhookSecretTokenCondition": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "WebhookSecretToken",
            },
            "",
          ],
        },
      ],
    },
  },
  "Description": "(SO0143)AWS DevOps Monitoring Dashboard  - Main Template. Version: v1.0.0",
  "Mappings": Object {
    "AnonymousData": Object {
      "SendAnonymousUsageData": Object {
        "Data": "Yes",
        "MetricsURL": "https://metrics.awssolutionsbuilder.com/generic",
      },
    },
    "UserAgentExtra": Object {
      "UserAgentExtra": Object {
        "Key": "AwsSolution/SO0143/v1.0.0",
      },
    },
  },
  "Metadata": Object {
    "AWS::CloudFormation::Interface": Object {
      "ParameterGroups": Array [
        Object {
          "Label": Object {
            "default": "Metrics Configuration",
          },
          "Parameters": Array [
            "DataDuration",
            "CodeCommitRepo",
          ],
        },
        Object {
          "Label": Object {
            "default": "S3 Configuration",
          },
          "Parameters": Array [
            "S3TransitionDays",
          ],
        },
        Object {
          "Label": Object {
            "default": "QuickSight Configuration",
          },
          "Parameters": Array [
            "QuickSightPrincipalArn",
          ],
        },
        Object {
          "Label": Object {
            "default": "GitHub Configuration",
          },
          "Parameters": Array [
            "UseGitHub",
            "WebhookSecretToken",
            "AllowedIPs",
          ],
        },
      ],
      "ParameterLabels": Object {
        "AllowedIPs": Object {
          "default": "Allowed IP Addresses",
        },
        "CodeCommitRepo": Object {
          "default": "AWS CodeCommit Repository List",
        },
        "DataDuration": Object {
          "default": "Athena Query Data Duration (Days)",
        },
        "QuickSightPrincipalArn": Object {
          "default": "Amazon Quicksight Principal ARN",
        },
        "S3TransitionDays": Object {
          "default": "S3 Transition Days",
        },
        "UseGitHub": Object {
          "default": "Use GitHub Repository",
        },
        "WebhookSecretToken": Object {
          "default": "Webhook Secret Token",
        },
      },
    },
  },
  "Outputs": Object {
    "APIEndpoint": Object {
      "Condition": "GitHubCondition",
      "Description": "Amazon API Endpoint to receive GitHub events for AWS DevOps Monitoring Dashboard Solution",
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Fn::GetAtt": Array [
                "GitHubStackNestedStackGitHubStackNestedStackResource3B60958E",
                "Outputs.DevopsDashboardStackGitHubStackGitHubEventsDevOpsDashboardAPI5D10EFA1Ref",
              ],
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Fn::GetAtt": Array [
                "GitHubStackNestedStackGitHubStackNestedStackResource3B60958E",
                "Outputs.DevopsDashboardStackGitHubStackGitHubEventsDevOpsDashboardAPIDeploymentStageprod49B4208DRef",
              ],
            },
            "/git",
          ],
        ],
      },
    },
    "DevOpsMetricsS3Bucket": Object {
      "Description": "DevOps Metrics S3 Bucket for AWS DevOps Monitoring Dashboard Solution",
      "Value": Object {
        "Fn::GetAtt": Array [
          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
          "Arn",
        ],
      },
    },
    "QSAnalysisURL": Object {
      "Condition": "QuickSightCondition",
      "Description": "Amazon QuickSight Analysis URL for AWS DevOps Monitoring Dashboard Solution",
      "Value": Object {
        "Fn::GetAtt": Array [
          "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359",
          "Outputs.DevopsDashboardStackQSDashboardQuicksightQuickSightResourcesC8F2EDEFanalysisurl",
        ],
      },
    },
    "QSDashboardURL": Object {
      "Condition": "QuickSightCondition",
      "Description": "Amazon QuickSight Dashboard URL for AWS DevOps Monitoring Dashboard Solution",
      "Value": Object {
        "Fn::GetAtt": Array [
          "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359",
          "Outputs.DevopsDashboardStackQSDashboardQuicksightQuickSightResourcesC8F2EDEFdashboardurl",
        ],
      },
    },
    "SolutionVersion": Object {
      "Description": "Version for AWS DevOps Monitoring Dashboard Solution",
      "Value": "v1.0.0",
    },
  },
  "Parameters": Object {
    "AllowedIPs": Object {
      "AllowedPattern": "^(?:((?!0\\\\d)(1?\\\\d?\\\\d|25[0-5]|2[0-4]\\\\d))\\\\.){3}((?!0\\\\d)(1?\\\\d?\\\\d|25[0-5]|2[0-4]\\\\d))(?:\\\\/([1-9]|[12]\\\\d|3[0-2]))?(?: *, *(?:((?!0\\\\d)(1?\\\\d?\\\\d|25[0-5]|2[0-4]\\\\d)){1,3}\\\\.){3}((?!0\\\\d)(1?\\\\d?\\\\d|25[0-5]|2[0-4]\\\\d))(?:\\\\/([1-9]|[12]\\\\d|3[0-2]))?)*$",
      "Default": "192.30.252.0/22,185.199.108.0/22,140.82.112.0/20,143.55.64.0/20",
      "Description": "Enter a comma-separated list of allowed IPV4 CIDR blocks. By default GitHub IP ranges are used. Note that GitHub changes their IP addresses from time to time so we strongly encourage regular monitoring of their API. If API secret is used, IP address authentication is bypassed. Ignore this field if GitHub is not used.",
      "Type": "String",
    },
    "AssetParameters12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6ArtifactHash57DC2C6E": Object {
      "Description": "Artifact hash for asset \\"12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6\\"",
      "Type": "String",
    },
    "AssetParameters12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6S3Bucket87BFDC61": Object {
      "Description": "S3 bucket for asset \\"12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6\\"",
      "Type": "String",
    },
    "AssetParameters12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6S3VersionKey95EBBE55": Object {
      "Description": "S3 key for asset version \\"12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6\\"",
      "Type": "String",
    },
    "AssetParameters34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415ArtifactHash38CB6091": Object {
      "Description": "Artifact hash for asset \\"34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415\\"",
      "Type": "String",
    },
    "AssetParameters34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415S3Bucket3F2BB2C1": Object {
      "Description": "S3 bucket for asset \\"34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415\\"",
      "Type": "String",
    },
    "AssetParameters34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415S3VersionKey8A65BDCF": Object {
      "Description": "S3 key for asset version \\"34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415\\"",
      "Type": "String",
    },
    "AssetParameters498f9512e0fcee27c3dbc1e5563460ac89f7d082267538a43871313c35e61444ArtifactHash0D4F89BF": Object {
      "Description": "Artifact hash for asset \\"498f9512e0fcee27c3dbc1e5563460ac89f7d082267538a43871313c35e61444\\"",
      "Type": "String",
    },
    "AssetParameters498f9512e0fcee27c3dbc1e5563460ac89f7d082267538a43871313c35e61444S3BucketEC4A210A": Object {
      "Description": "S3 bucket for asset \\"498f9512e0fcee27c3dbc1e5563460ac89f7d082267538a43871313c35e61444\\"",
      "Type": "String",
    },
    "AssetParameters498f9512e0fcee27c3dbc1e5563460ac89f7d082267538a43871313c35e61444S3VersionKeyC13B7A89": Object {
      "Description": "S3 key for asset version \\"498f9512e0fcee27c3dbc1e5563460ac89f7d082267538a43871313c35e61444\\"",
      "Type": "String",
    },
    "AssetParameters4edbcafc7114b73ff1a0f2240dafee60fbaa8c77f54422d5ba97ea8aeab755e3ArtifactHashCE552111": Object {
      "Description": "Artifact hash for asset \\"4edbcafc7114b73ff1a0f2240dafee60fbaa8c77f54422d5ba97ea8aeab755e3\\"",
      "Type": "String",
    },
    "AssetParameters4edbcafc7114b73ff1a0f2240dafee60fbaa8c77f54422d5ba97ea8aeab755e3S3BucketEED3AD88": Object {
      "Description": "S3 bucket for asset \\"4edbcafc7114b73ff1a0f2240dafee60fbaa8c77f54422d5ba97ea8aeab755e3\\"",
      "Type": "String",
    },
    "AssetParameters4edbcafc7114b73ff1a0f2240dafee60fbaa8c77f54422d5ba97ea8aeab755e3S3VersionKey9E4B3756": Object {
      "Description": "S3 key for asset version \\"4edbcafc7114b73ff1a0f2240dafee60fbaa8c77f54422d5ba97ea8aeab755e3\\"",
      "Type": "String",
    },
    "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803ArtifactHashB9D9F9D6": Object {
      "Description": "Artifact hash for asset \\"92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803\\"",
      "Type": "String",
    },
    "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3Bucket96D7CFA8": Object {
      "Description": "S3 bucket for asset \\"92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803\\"",
      "Type": "String",
    },
    "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3VersionKey6DE1BFB6": Object {
      "Description": "S3 key for asset version \\"92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803\\"",
      "Type": "String",
    },
    "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5ArtifactHashE9AE13B7": Object {
      "Description": "Artifact hash for asset \\"c13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5\\"",
      "Type": "String",
    },
    "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3Bucket51CDED69": Object {
      "Description": "S3 bucket for asset \\"c13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5\\"",
      "Type": "String",
    },
    "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3VersionKey50C3CFF0": Object {
      "Description": "S3 key for asset version \\"c13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5\\"",
      "Type": "String",
    },
    "AssetParameterse9f315276b32f3c51fbbfd5c315ca306093c26cfd8172fdaa635ded66c368e5eArtifactHash5FA74521": Object {
      "Description": "Artifact hash for asset \\"e9f315276b32f3c51fbbfd5c315ca306093c26cfd8172fdaa635ded66c368e5e\\"",
      "Type": "String",
    },
    "AssetParameterse9f315276b32f3c51fbbfd5c315ca306093c26cfd8172fdaa635ded66c368e5eS3BucketE3EB184D": Object {
      "Description": "S3 bucket for asset \\"e9f315276b32f3c51fbbfd5c315ca306093c26cfd8172fdaa635ded66c368e5e\\"",
      "Type": "String",
    },
    "AssetParameterse9f315276b32f3c51fbbfd5c315ca306093c26cfd8172fdaa635ded66c368e5eS3VersionKey976941DC": Object {
      "Description": "S3 key for asset version \\"e9f315276b32f3c51fbbfd5c315ca306093c26cfd8172fdaa635ded66c368e5e\\"",
      "Type": "String",
    },
    "CodeCommitRepo": Object {
      "Default": "'ALL'",
      "Description": "List of the names of AWS CodeCommit Repositories that will be monitored. Must be single-quoted and comma separated. For example, 'MyRepository1','MyRepository2'. To monitor all the repositories, leave default 'ALL' value.",
      "Type": "String",
    },
    "DataDuration": Object {
      "Default": "90",
      "Description": "Enter a duration (days) that Athena query uses to retrieve data. By default Athena query retrieves data within the last 90 days. We recommend you to limit the duration for performance optimization and cost reduction.",
      "Type": "Number",
    },
    "QuickSightPrincipalArn": Object {
      "AllowedPattern": "^$|^arn:\\\\S+:quicksight:\\\\S+:\\\\d{12}:user/\\\\S+$",
      "ConstraintDescription": "Provide an arn matching an Amazon Quicksight User ARN. The input did not match the validation pattern.",
      "Default": "",
      "Description": "Provide a QuickSight ADMIN user ARN (arn:aws:quicksight:AWSRegion:AWSAccountId:user/default/QuickSightUserName) to automatically create QuickSight dashboards. QuickSight Enterprise edition must be enabled for the account. To disable QuickSight dashboards creation, leave it blank.",
      "Type": "String",
    },
    "S3TransitionDays": Object {
      "Default": "365",
      "Description": "Enter the number of days after which you would like to transition Amazon S3 objects to Amazon S3 Glacier storage class. By default objects are transitioned to Glacier 365 days (one year) after creation.",
      "Type": "Number",
    },
    "UseGitHub": Object {
      "AllowedValues": Array [
        "Yes",
        "No",
      ],
      "Default": "No",
      "Description": "Select Yes if GitHub is used as code repository, otherwise leave it to No.",
      "Type": "String",
    },
    "WebhookSecretToken": Object {
      "Default": "",
      "Description": "Enter a random string with high entropy to authenticate access to webhooks in GitHub. If a webhook payload header contains a matching secret, IP address authentication is bypassed. The string cannot contain commas (,), backward slashes (\\\\), or quotes (\\"). It is highly recommended to use secret to secure your GitHub webhook. To turn off secret authentication, leave it blank. Ignore this field if GitHub is not used.",
      "NoEcho": true,
      "Type": "String",
    },
  },
  "Resources": Object {
    "AddAthenaPartitionEventsRule8E73AEE0": Object {
      "Properties": Object {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for adding Athena partitions",
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "AddAthenaPartitionLambdaFunction02003486",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AddAthenaPartitionLambdaFunction02003486": Object {
      "DependsOn": Array [
        "AddAthenaPartitionLambdaRoleDefaultPolicyBA8B41CD",
        "AddAthenaPartitionLambdaRoleA28EF3C7",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6S3Bucket87BFDC61",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6S3VersionKey95EBBE55",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6S3VersionKey95EBBE55",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function runs on a daily schedule and adds a new partition to Amazon Athena table",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AthenaWorkGroup": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "AWSDevOpsDashboardWG-",
                  Object {
                    "Fn::GetAtt": Array [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
            "CodeBuildMetricsTableName": Object {
              "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
            },
            "GitHubMetricsTableName": Object {
              "Ref": "GlueAthenaDatabaseGitHubMetricsGlueTableE4E043BF",
            },
            "LOG_LEVEL": "INFO",
            "MetricsDBName": Object {
              "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
            },
            "MetricsTableName": Object {
              "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
            },
            "MetricsURL": Object {
              "Fn::FindInMap": Array [
                "AnonymousData",
                "SendAnonymousUsageData",
                "MetricsURL",
              ],
            },
            "Region": Object {
              "Ref": "AWS::Region",
            },
            "SendAnonymousUsageData": Object {
              "Fn::FindInMap": Array [
                "AnonymousData",
                "SendAnonymousUsageData",
                "Data",
              ],
            },
            "SolutionId": "SO0143",
            "UUID": Object {
              "Fn::GetAtt": Array [
                "SolutionHelperCreateUniqueIDAF03406A",
                "UUID",
              ],
            },
            "UserAgentExtra": Object {
              "Fn::FindInMap": Array [
                "UserAgentExtra",
                "UserAgentExtra",
                "Key",
              ],
            },
            "Version": "v1.0.0",
          },
        },
        "Handler": "add_athena_partition.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AddAthenaPartitionLambdaRoleA28EF3C7",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 300,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "AddAthenaPartitionLambdaFunctionAwsEventsLambdaInvokePermission19FEC65E3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AddAthenaPartitionLambdaFunction02003486",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "AddAthenaPartitionEventsRule8E73AEE0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AddAthenaPartitionLambdaFunctionServiceRole34D9F028": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AddAthenaPartitionLambdaRoleA28EF3C7": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W11",
              "reason": "Resource * is required for cloudwatch:GetMetricStatistics as it does not support resource-level permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                  "Sid": "CreateCWLogs",
                },
                Object {
                  "Action": Array [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListMultipartUploadParts",
                    "s3:AbortMultipartUpload",
                    "s3:CreateBucket",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          Object {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                          "/athena_results/*",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          Object {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          Object {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "S3AccessPS",
                },
                Object {
                  "Action": "athena:StartQueryExecution",
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":athena:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":workgroup/AWSDevOpsDashboard*",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":athena:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":workgroup/primary",
                        ],
                      ],
                    },
                  ],
                  "Sid": "AthenaQueryExecutionPS",
                },
                Object {
                  "Action": Array [
                    "glue:GetTable",
                    "glue:GetPartitions",
                    "glue:GetDatabase",
                    "glue:CreateTable",
                    "glue:UpdateTable",
                    "glue:BatchCreatePartition",
                  ],
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":catalog",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":database/",
                          Object {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          Object {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/",
                          Object {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
                          },
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          Object {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "glueAccessPS",
                },
                Object {
                  "Action": "cloudwatch:GetMetricStatistics",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "cloudwatchAccessPS",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "AddAthenaPartitionPolicy-",
                  Object {
                    "Fn::GetAtt": Array [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AddAthenaPartitionLambdaRoleDefaultPolicyBA8B41CD": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AddAthenaPartitionLambdaRoleDefaultPolicyBA8B41CD",
        "Roles": Array [
          Object {
            "Ref": "AddAthenaPartitionLambdaRoleA28EF3C7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CanaryEventsCanaryEventsRule115776A2": Object {
      "Properties": Object {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for Amazon CloudWatch Synthetics Canary Alarm",
        "EventPattern": Object {
          "detail": Object {
            "configuration": Object {
              "metrics": Object {
                "metricStat": Object {
                  "metric": Object {
                    "namespace": Array [
                      "CloudWatchSynthetics",
                    ],
                  },
                },
              },
            },
            "previousState": Object {
              "value": Array [
                "ALARM",
              ],
            },
            "state": Object {
              "value": Array [
                "OK",
              ],
            },
          },
          "detail-type": Array [
            "CloudWatch Alarm State Change",
          ],
          "source": Array [
            "aws.cloudwatch",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodeBuildEventsCloudWatchMetricStreamB26149A1": Object {
      "Properties": Object {
        "FirehoseArn": Object {
          "Fn::GetAtt": Array [
            "CodeBuildEventsCodeBuildKinesisFirehose48AE2746",
            "Arn",
          ],
        },
        "IncludeFilters": Array [
          Object {
            "Namespace": "AWS/CodeBuild",
          },
        ],
        "OutputFormat": "json",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CodeBuildEventsCloudWatchMetricStreamRole047DA47A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudWatch::MetricStream",
    },
    "CodeBuildEventsCloudWatchMetricStreamRole047DA47A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "streams.metrics.cloudwatch.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "firehose:PutRecord",
                    "firehose:PutRecordBatch",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "CodeBuildEventsCodeBuildKinesisFirehose48AE2746",
                      "Arn",
                    ],
                  },
                  "Sid": "FirehosePutRecordPS",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "FirehosePutRecord-",
                  Object {
                    "Fn::GetAtt": Array [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeBuildEventsCodeBuildEventParserBA00AD10": Object {
      "DependsOn": Array [
        "CodeBuildEventsCodeBuildEventParserLambdaRole6077AACD",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC",
            },
            Object {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3Bucket96D7CFA8",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3VersionKey6DE1BFB6",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3VersionKey6DE1BFB6",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function performs lambda transformation within kinesis firehose. It parses CloudWatch metrics for CodeBuild, sends relevant data to S3 for downstream operation",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "INFO",
            "UserAgentExtra": Object {
              "Fn::FindInMap": Array [
                "UserAgentExtra",
                "UserAgentExtra",
                "Key",
              ],
            },
          },
        },
        "Handler": "codebuild_index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CodeBuildEventsCodeBuildEventParserLambdaRole6077AACD",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CodeBuildEventsCodeBuildEventParserLambdaRole6077AACD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                  "Sid": "CreateCWLogs",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "CodeBuildEventParserLambdaPolicy-",
                  Object {
                    "Fn::GetAtt": Array [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeBuildEventsCodeBuildEventParserLogRetention28A35144": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "CodeBuildEventsCodeBuildEventParserBA00AD10",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CodeBuildEventsCodeBuildKinesisFirehose48AE2746": Object {
      "DependsOn": Array [
        "CodeBuildEventsCodeBuildKinesisFirehosePolicy928AD09F",
      ],
      "Properties": Object {
        "DeliveryStreamEncryptionConfigurationInput": Object {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 128,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5",
            },
            "LogStreamName": Object {
              "Ref": "CodeBuildEventsCodeBuildfirehoseloggroupfirehoselogstreamEEA2FA4F",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": Object {
            "Enabled": true,
            "InputFormatConfiguration": Object {
              "Deserializer": Object {
                "OpenXJsonSerDe": Object {
                  "CaseInsensitive": true,
                },
              },
            },
            "OutputFormatConfiguration": Object {
              "Serializer": Object {
                "ParquetSerDe": Object {
                  "Compression": "SNAPPY",
                },
              },
            },
            "SchemaConfiguration": Object {
              "DatabaseName": Object {
                "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
              },
              "RoleARN": Object {
                "Fn::GetAtt": Array [
                  "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC",
                  "Arn",
                ],
              },
              "TableName": Object {
                "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
              },
            },
          },
          "EncryptionConfiguration": Object {
            "KMSEncryptionConfig": Object {
              "AWSKMSKeyARN": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":alias/aws/s3",
                  ],
                ],
              },
            },
          },
          "ErrorOutputPrefix": "CodeBuildEventsProcessingErrorlogs/result=!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "CodeBuildEvents/created_at=!{timestamp:yyyy-MM-dd}/",
          "ProcessingConfiguration": Object {
            "Enabled": true,
            "Processors": Array [
              Object {
                "Parameters": Array [
                  Object {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": Object {
                      "Fn::GetAtt": Array [
                        "CodeBuildEventsCodeBuildEventParserBA00AD10",
                        "Arn",
                      ],
                    },
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CodeBuildEventsCodeBuildKinesisFirehosePolicy928AD09F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "CodeBuildEventsCodeBuildfirehoseloggroupfirehoselogstreamEEA2FA4F",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CodeBuildEventsCodeBuildEventParserBA00AD10",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CodeBuildEventsCodeBuildEventParserBA00AD10",
                          "Arn",
                        ],
                      },
                      ":$LATEST",
                    ],
                  ],
                },
              ],
              "Sid": "InvokeLambda",
            },
            Object {
              "Action": Array [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                      "/",
                      Object {
                        "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "glueAccessPSForCodeBuildEventsFirehose",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeBuildEventsCodeBuildKinesisFirehosePolicy928AD09F",
        "Roles": Array [
          Object {
            "Ref": "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeBuildEventsCodeBuildfirehoseloggroupfirehoselogstreamEEA2FA4F": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeCommitEventsRule6F25533B": Object {
      "Properties": Object {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for AWS CodeCommit",
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "PutFile",
              "DeleteFile",
              "UpdateFile",
              "GitPush",
            ],
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodeCommitEventsRuleInvokeKinesisFirehosePolicy1498E6F5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeCommitEventsRuleInvokeKinesisFirehosePolicy1498E6F5",
        "Roles": Array [
          Object {
            "Ref": "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Events Rule To Kinesis Firehose Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8": Object {
      "DependsOn": Array [
        "CodeCommitKinesisFirehoseToS3KinesisFirehosePolicy7335C74C",
        "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
      ],
      "Properties": Object {
        "DeliveryStreamEncryptionConfigurationInput": Object {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 300,
            "SizeInMBs": 128,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC",
            },
            "LogStreamName": Object {
              "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC9CAC73D",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": Object {
            "Enabled": true,
            "InputFormatConfiguration": Object {
              "Deserializer": Object {
                "OpenXJsonSerDe": Object {
                  "CaseInsensitive": true,
                },
              },
            },
            "OutputFormatConfiguration": Object {
              "Serializer": Object {
                "ParquetSerDe": Object {
                  "Compression": "SNAPPY",
                },
              },
            },
            "SchemaConfiguration": Object {
              "DatabaseName": Object {
                "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
              },
              "RoleARN": Object {
                "Fn::GetAtt": Array [
                  "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272",
                  "Arn",
                ],
              },
              "TableName": Object {
                "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
              },
              "VersionId": "LATEST",
            },
          },
          "EncryptionConfiguration": Object {
            "KMSEncryptionConfig": Object {
              "AWSKMSKeyARN": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":alias/aws/s3",
                  ],
                ],
              },
            },
          },
          "ErrorOutputPrefix": "DevopsEventsProcessingErrorlogs/result=!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "DevopsEvents/created_at=!{timestamp:yyyy-MM-dd}/",
          "ProcessingConfiguration": Object {
            "Enabled": true,
            "Processors": Array [
              Object {
                "Parameters": Array [
                  Object {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": Object {
                      "Fn::GetAtt": Array [
                        "EventParserE8B3240E",
                        "Arn",
                      ],
                    },
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CodeCommitKinesisFirehoseToS3KinesisFirehosePolicy7335C74C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    Object {
                      "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC",
                    },
                    ":log-stream:",
                    Object {
                      "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC9CAC73D",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "EventParserE8B3240E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "EventParserE8B3240E",
                          "Arn",
                        ],
                      },
                      ":$LATEST",
                    ],
                  ],
                },
              ],
              "Sid": "InvokeLambda",
            },
            Object {
              "Action": Array [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                      "/",
                      Object {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "glueAccessPSForFirehose",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeCommitKinesisFirehoseToS3KinesisFirehosePolicy7335C74C",
        "Roles": Array [
          Object {
            "Ref": "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "aws-devops-metrics-",
              Object {
                "Fn::GetAtt": Array [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID",
                ],
              },
            ],
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "NoncurrentVersionTransitions": Array [
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": Object {
                    "Ref": "S3TransitionDays",
                  },
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF",
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeCommitKinesisFirehoseToS3S3BucketPolicy4E0BD5BE": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "aws-devops-metrics-logging-",
              Object {
                "Fn::GetAtt": Array [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID",
                ],
              },
            ],
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeCommitKinesisFirehoseToS3S3LoggingBucketPolicyA9B174C1": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeCommitKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC9CAC73D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeDeployEventsCodeDeployEventsRule9A7B5DEA": Object {
      "Properties": Object {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for AWS CodeDeploy",
        "EventPattern": Object {
          "detail-type": Array [
            "CodeDeploy Deployment State-change Notification",
          ],
          "source": Array [
            "aws.codedeploy",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodePipelineAlarmEventsCodePipelineAlarmEventsRule89554585": Object {
      "Properties": Object {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for AWS CodePipeline Alarm",
        "EventPattern": Object {
          "detail": Object {
            "configuration": Object {
              "metrics": Object {
                "metricStat": Object {
                  "metric": Object {
                    "namespace": Array [
                      "CodePipeline/SO0143/Pipelines",
                    ],
                  },
                },
              },
            },
            "previousState": Object {
              "value": Array [
                "ALARM",
              ],
            },
            "state": Object {
              "value": Array [
                "OK",
              ],
            },
          },
          "detail-type": Array [
            "CloudWatch Alarm State Change",
          ],
          "source": Array [
            "aws.cloudwatch",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodePipelineEventsCodePipelineEventsRuleB5CD4C2A": Object {
      "Properties": Object {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for AWS CodePipeline",
        "EventPattern": Object {
          "detail-type": Array [
            "CodePipeline Action Execution State Change",
          ],
          "source": Array [
            "aws.codepipeline",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CustomResourceQueryRunner": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AthenaWorkGroup": Object {
          "Fn::Join": Array [
            "",
            Array [
              "AWSDevOpsDashboardWG-",
              Object {
                "Fn::GetAtt": Array [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID",
                ],
              },
            ],
          ],
        },
        "CodeBuildMetricsTableName": Object {
          "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
        },
        "DataDuration": Object {
          "Ref": "DataDuration",
        },
        "GitHubMetricsTableName": Object {
          "Ref": "GlueAthenaDatabaseGitHubMetricsGlueTableE4E043BF",
        },
        "MetricsDBName": Object {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "MetricsTableName": Object {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
        },
        "RepositoryList": Object {
          "Ref": "CodeCommitRepo",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "QueryRunner0586B77B",
            "Arn",
          ],
        },
      },
      "Type": "Custom::QueryRunner",
      "UpdateReplacePolicy": "Delete",
    },
    "EventParserE8B3240E": Object {
      "DependsOn": Array [
        "EventParserLambdaRole3A607F90",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC",
            },
            Object {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3Bucket96D7CFA8",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3VersionKey6DE1BFB6",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3VersionKey6DE1BFB6",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function performs lambda transformation within kinesis firehose. It parses raw cloudwatch events, sends relevant data to S3 for downstream operation",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "INFO",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "EventParserLambdaRole3A607F90",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "EventParserLambdaRole3A607F90": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                  "Sid": "CreateCWLogs",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "EventParserLambdaPolicy-",
                  Object {
                    "Fn::GetAtt": Array [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EventParserLogRetentionEE2D5A71": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "EventParserE8B3240E",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "GitHubStackNestedStackGitHubStackNestedStackResource3B60958E": Object {
      "Condition": "GitHubCondition",
      "DeletionPolicy": "Delete",
      "Description": "(SO0143)AWS DevOps Monitoring Dashboard - Create AWS Resources needed to process GitHub events. Version: v1.0.0",
      "Metadata": Object {
        "nestedStackFileName": "DevopsDashboardStackGitHubStack7BADA944.nested.template",
      },
      "Properties": Object {
        "Parameters": Object {
          "referencetoDevopsDashboardStackAllowedIPs56B4DE68Ref": Object {
            "Ref": "AllowedIPs",
          },
          "referencetoDevopsDashboardStackAssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3BucketBFE30504Ref": Object {
            "Ref": "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3Bucket96D7CFA8",
          },
          "referencetoDevopsDashboardStackAssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3VersionKeyF87DBB14Ref": Object {
            "Ref": "AssetParameters92d88a2d99e813c4c00a80cd347fa5e9c9368300296b624b76034a4a4e6e6803S3VersionKey6DE1BFB6",
          },
          "referencetoDevopsDashboardStackAssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3Bucket4F21B625Ref": Object {
            "Ref": "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3Bucket51CDED69",
          },
          "referencetoDevopsDashboardStackAssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3VersionKey973FB7B5Ref": Object {
            "Ref": "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3VersionKey50C3CFF0",
          },
          "referencetoDevopsDashboardStackCodeCommitKinesisFirehoseToS3S3Bucket455CCE35Arn": Object {
            "Fn::GetAtt": Array [
              "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
              "Arn",
            ],
          },
          "referencetoDevopsDashboardStackGlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseC4FAA1E8Ref": Object {
            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
          },
          "referencetoDevopsDashboardStackGlueAthenaDatabaseGitHubMetricsGlueTable9A8E6DD6Ref": Object {
            "Ref": "GlueAthenaDatabaseGitHubMetricsGlueTableE4E043BF",
          },
          "referencetoDevopsDashboardStackSolutionHelperCreateUniqueID00935C8CUUID": Object {
            "Fn::GetAtt": Array [
              "SolutionHelperCreateUniqueIDAF03406A",
              "UUID",
            ],
          },
          "referencetoDevopsDashboardStackWebhookSecretTokenF236DDB5Ref": Object {
            "Ref": "WebhookSecretToken",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameterse9f315276b32f3c51fbbfd5c315ca306093c26cfd8172fdaa635ded66c368e5eS3BucketE3EB184D",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse9f315276b32f3c51fbbfd5c315ca306093c26cfd8172fdaa635ded66c368e5eS3VersionKey976941DC",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse9f315276b32f3c51fbbfd5c315ca306093c26cfd8172fdaa635ded66c368e5eS3VersionKey976941DC",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "GlueAthenaDatabaseAWSDevOpsDashboardAthenaWorkGroupCA26D38C": Object {
      "Properties": Object {
        "Description": "AWS DevOps Monitoring Dashboard Solution Athena Work Group",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "AWSDevOpsDashboardWG-",
              Object {
                "Fn::GetAtt": Array [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID",
                ],
              },
            ],
          ],
        },
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": Object {
          "EngineVersion": Object {
            "SelectedEngineVersion": "Athena engine version 2",
          },
          "PublishCloudWatchMetricsEnabled": true,
          "ResultConfiguration": Object {
            "EncryptionConfiguration": Object {
              "EncryptionOption": "SSE_S3",
            },
            "OutputLocation": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/athena_query_output/",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": "aws_devops_metrics_db_so0143",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "TableInput": Object {
          "Description": "AWS DevOps Monitoring Dashboard Solution - AWS DevOps Metrics Glue table",
          "Name": "aws_devops_metrics_table",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "version",
                "Type": "string",
              },
              Object {
                "Name": "id",
                "Type": "string",
              },
              Object {
                "Name": "detail_type",
                "Type": "string",
              },
              Object {
                "Name": "source",
                "Type": "string",
              },
              Object {
                "Name": "account",
                "Type": "string",
              },
              Object {
                "Name": "time",
                "Type": "timestamp",
              },
              Object {
                "Name": "region",
                "Type": "string",
              },
              Object {
                "Comment": "array<string>",
                "Name": "resources",
                "Type": "array<string>",
              },
              Object {
                "Comment": "struct<nested_column:datatype>",
                "Name": "detail",
                "Type": "struct<eventName:string,repositoryName:string,branchName:string,authorName:string,commitId:string,canaryAlarmName:string,canaryAlarmAppName:string,canaryAlarmRepoName:string,canaryAlarmCurrState:string,canaryAlarmPrevState:string,canaryAlarmCurrStateTimeStamp:timestamp,canaryAlarmPrevStateTimeStamp:timestamp,recoveryDurationMinutes:int,deploymentState:string,deploymentId:string,deploymentApplication:string,pipelineName:string,executionId:string,stage:string,action:string,state:string,externalExecutionId:string,actionCategory:string,actionOwner:string,actionProvider:string,alarmType:string>",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/DevopsEvents/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "TableInput": Object {
          "Description": "AWS DevOps Monitoring Dashboard Solution - AWS CodeBuild Metrics Glue table",
          "Name": "aws_codebuild_metrics_table",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "metric_stream_name",
                "Type": "string",
              },
              Object {
                "Name": "account_id",
                "Type": "string",
              },
              Object {
                "Name": "region",
                "Type": "string",
              },
              Object {
                "Name": "namespace",
                "Type": "string",
              },
              Object {
                "Name": "metric_name",
                "Type": "string",
              },
              Object {
                "Name": "dimensions",
                "Type": "struct<ProjectName:string,BuildId:string,BuildNumber:int>",
              },
              Object {
                "Name": "timestamp",
                "Type": "bigint",
              },
              Object {
                "Comment": "struct<nested_column:datatype>",
                "Name": "value",
                "Type": "struct<count:double,sum:double,max:double,min:double>",
              },
              Object {
                "Name": "unit",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/CodeBuildEvents/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "GlueAthenaDatabaseGitHubMetricsGlueTableE4E043BF": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "TableInput": Object {
          "Description": "AWS DevOps Monitoring Dashboard Solution - GitHub Metrics Glue table",
          "Name": "aws_github_metrics_table",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "repository_name",
                "Type": "string",
              },
              Object {
                "Name": "branch_name",
                "Type": "string",
              },
              Object {
                "Name": "author_name",
                "Type": "string",
              },
              Object {
                "Name": "event_name",
                "Type": "string",
              },
              Object {
                "Comment": "array<string>",
                "Name": "commit_id",
                "Type": "array<string>",
              },
              Object {
                "Name": "time",
                "Type": "timestamp",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/GitHubEvents/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda has the required permission to write CloudWatch Logs through a custom policy.",
            },
            Object {
              "id": "W89",
              "reason": "There is no need to deploy this Lambda to a VPC.",
            },
            Object {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3Bucket51CDED69",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3VersionKey50C3CFF0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3VersionKey50C3CFF0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Resource * is required by the Lambda Execution role, so that the Lambda can add ResourcePolicies to all required resources.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359": Object {
      "Condition": "QuickSightCondition",
      "DeletionPolicy": "Delete",
      "Description": "(SO0143)AWS DevOps Monitoring Dashboard - Create QuickSight Template. Version: v1.0.0",
      "Metadata": Object {
        "nestedStackFileName": "DevopsDashboardStackQSDashboard0560D204.nested.template",
      },
      "Properties": Object {
        "Parameters": Object {
          "AthenaWorkGroupName": Object {
            "Fn::Join": Array [
              "",
              Array [
                "AWSDevOpsDashboardWG-",
                Object {
                  "Fn::GetAtt": Array [
                    "SolutionHelperCreateUniqueIDAF03406A",
                    "UUID",
                  ],
                },
              ],
            ],
          },
          "ParentStackName": Object {
            "Ref": "AWS::StackName",
          },
          "QuickSightPrincipalArn": Object {
            "Ref": "QuickSightPrincipalArn",
          },
          "SolutionID": "SO0143",
          "SolutionName": "AWS DevOps Monitoring Dashboard",
          "SolutionVersion": "v1.0.0",
          "referencetoDevopsDashboardStackAssetParameters34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415S3BucketDFAF0EF5Ref": Object {
            "Ref": "AssetParameters34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415S3Bucket3F2BB2C1",
          },
          "referencetoDevopsDashboardStackAssetParameters34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415S3VersionKeyB0FB47C5Ref": Object {
            "Ref": "AssetParameters34e65fc8f925be21801e0e70e4a8b201123c67db251b44216c695aeb2f086415S3VersionKey8A65BDCF",
          },
          "referencetoDevopsDashboardStackAssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3Bucket4F21B625Ref": Object {
            "Ref": "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3Bucket51CDED69",
          },
          "referencetoDevopsDashboardStackAssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3VersionKey973FB7B5Ref": Object {
            "Ref": "AssetParametersc13434f8f1aa2ea30fa577b2feb208a41368b11787b752e10bfc71fe8eb919d5S3VersionKey50C3CFF0",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters498f9512e0fcee27c3dbc1e5563460ac89f7d082267538a43871313c35e61444S3BucketEC4A210A",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters498f9512e0fcee27c3dbc1e5563460ac89f7d082267538a43871313c35e61444S3VersionKeyC13B7A89",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters498f9512e0fcee27c3dbc1e5563460ac89f7d082267538a43871313c35e61444S3VersionKeyC13B7A89",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "QueryRunner0586B77B": Object {
      "DependsOn": Array [
        "queryRunnerLambdaRoleB4DE757D",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC",
            },
            Object {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6S3Bucket87BFDC61",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6S3VersionKey95EBBE55",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters12fb9cc49a0cfdbf2c4b780bf96e79edccf1156ee13cad73b4d4f4494b4a5eb6S3VersionKey95EBBE55",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function runs Amazon Athena queries and creates views.",
        "Environment": Object {
          "Variables": Object {
            "LOG_LEVEL": "INFO",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "queryRunnerLambdaRoleB4DE757D",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "QueryRunnerLogRetention4166B125": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "QueryRunner0586B77B",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SendAnonymousUsageData": Object {
      "Condition": "AnonymousDataToAWS",
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AthenaQueryDataDuration": Object {
          "Ref": "DataDuration",
        },
        "MetricsURL": Object {
          "Fn::FindInMap": Array [
            "AnonymousData",
            "SendAnonymousUsageData",
            "MetricsURL",
          ],
        },
        "QuickSightPrincipalArn": Object {
          "Ref": "QuickSightPrincipalArn",
        },
        "Region": Object {
          "Ref": "AWS::Region",
        },
        "RepositoryList": Object {
          "Ref": "CodeCommitRepo",
        },
        "S3TransitionDays": Object {
          "Ref": "S3TransitionDays",
        },
        "SendAnonymousUsageData": Object {
          "Fn::FindInMap": Array [
            "AnonymousData",
            "SendAnonymousUsageData",
            "Data",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "QueryRunner0586B77B",
            "Arn",
          ],
        },
        "SolutionId": "SO0143",
        "UUID": Object {
          "Fn::GetAtt": Array [
            "SolutionHelperCreateUniqueIDAF03406A",
            "UUID",
          ],
        },
        "UseGitHubRepository": Object {
          "Ref": "UseGitHub",
        },
        "UseWebhookSecret": Object {
          "Fn::If": Array [
            "WebhookSecretTokenCondition",
            "yes",
            "no",
          ],
        },
        "Version": "v1.0.0",
      },
      "Type": "Custom::SendAnonymousUsageData",
      "UpdateReplacePolicy": "Delete",
    },
    "SolutionHelper4825923B": Object {
      "DependsOn": Array [
        "SolutionHelperHelperRole142364AA",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC",
            },
            Object {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4edbcafc7114b73ff1a0f2240dafee60fbaa8c77f54422d5ba97ea8aeab755e3S3BucketEED3AD88",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4edbcafc7114b73ff1a0f2240dafee60fbaa8c77f54422d5ba97ea8aeab755e3S3VersionKey9E4B3756",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4edbcafc7114b73ff1a0f2240dafee60fbaa8c77f54422d5ba97ea8aeab755e3S3VersionKey9E4B3756",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function generates UUID for each deployment.",
        "Environment": Object {
          "Variables": Object {
            "UserAgentExtra": "AwsSolution/SO0143/v1.0.0",
          },
        },
        "Handler": "lambda_function.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SolutionHelperHelperRole142364AA",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SolutionHelperCreateUniqueIDAF03406A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Resource": "UUID",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "SolutionHelper4825923B",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CreateUUID",
      "UpdateReplacePolicy": "Delete",
    },
    "SolutionHelperHelperRole142364AA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "CloudWatchLogsPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SolutionHelperLogRetention92874000": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SolutionHelper4825923B",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "queryRunnerLambdaRoleB4DE757D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                  "Sid": "CreateCWLogs",
                },
                Object {
                  "Action": Array [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListMultipartUploadParts",
                    "s3:AbortMultipartUpload",
                    "s3:CreateBucket",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          Object {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                          "/athena_results/*",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          Object {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          Object {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                          "/*",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::aws-athena-query-results-*",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::query-results-custom-bucket",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::query-results-custom-bucket/*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "s3AccessPSwAthena",
                },
                Object {
                  "Action": "athena:StartQueryExecution",
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":athena:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":workgroup/AWSDevOpsDashboard*",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":athena:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":workgroup/primary",
                        ],
                      ],
                    },
                  ],
                  "Sid": "AthenaQueryExecutionPS",
                },
                Object {
                  "Action": Array [
                    "glue:GetTable",
                    "glue:GetPartitions",
                    "glue:GetDatabase",
                    "glue:CreateTable",
                    "glue:UpdateTable",
                    "glue:BatchCreatePartition",
                    "glue:DeleteTable",
                    "glue:DeletePartition",
                  ],
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":catalog",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":database/",
                          Object {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          Object {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/",
                          Object {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
                          },
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          Object {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/*",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          Object {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          Object {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/",
                          Object {
                            "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
                          },
                        ],
                      ],
                    },
                  ],
                  "Sid": "glueAccessPS",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "queryRunnerLambdaPolicy-",
                  Object {
                    "Fn::GetAtt": Array [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
